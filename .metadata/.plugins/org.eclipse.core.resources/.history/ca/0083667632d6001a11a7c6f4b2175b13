package com.atguigu.crowd.test;

import static org.hamcrest.CoreMatchers.nullValue;

import java.sql.Connection;
import java.sql.SQLException;
import javax.sql.DataSource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.atguigu.crowd.entity.Admin;
import com.atguigu.crowd.mapper.AdminMapper;
import com.atguigu.crowd.service.api.AdminService;

//在类上标记必要的注解，spring整合junit
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:spring-persist-mybatis.xml"})
public class CrowdTest {
	@Autowired
	private DataSource dataSource;
	
	@Autowired
	private AdminMapper adminMapper;
	
	@Autowired
	private AdminService adminService;
	
	@Test
	public void testTX() {
		new Admin(null, "cat", "111111", "猫","cat@123.com", createTime)
	}
	
	@Test
	public void testlog() {
		//1.获取logger对象，这里传入的class对象就是当前打印日志的类
		Logger logger = LoggerFactory.getLogger(CrowdTest.class);
		//2.根据不同日志级别打印日志
		logger.debug("hello log!");
		logger.debug("hello log1!");
		logger.debug("hello log2!");
		
		logger.info("info logger");
		logger.info("info logger1");
		logger.info("info logger2");
		
		logger.warn("warn logger");
		logger.warn("warn logger1");
		logger.warn("warn logger2");
		
		logger.error("error logger");
		logger.error("error logger1");
		logger.error("error logger2");
	}
	
	@Test
	public void testInsertAdmin() {
		Admin admin = new Admin(null,"tom","123123","汤姆","tom@163.com",null);
		int insert = adminMapper.insert(admin);
		
		//sysout本质上是一个IO操作，通常IO的操作是比较消耗性能的，如果项目中的sysout很多，那么对性能的影响就比较大了
		System.out.println("受影响的行数："+insert);
	}
	@Test
	public void testConnection() throws SQLException {
		Connection connection = dataSource.getConnection();
		System.out.println("234234:"+connection);
	}
}
